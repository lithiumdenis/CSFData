%% Синтез и анализ алгоритмов распознавания образов с использованием бинарных признаков
%%% 1. Задание исходных данных
clc; clear;
M = 2;                  % количество классов - 2 буквы;
n = 35;                 % количество признаков (пикселей изображения).
%% 1.1. Формирование изображений и задание априорных вероятностей их распознавания.
% Формируются $M$ бинарных образов букв
% (см. описание <http://www.mathworks.com/help/nnet/examples/character-recognition.html prprob>),
% каждый из которых состоит из $n$ элементов. Каждому образу 
%
% $\begin{array}{cc} s^{(i)}, & i=1,\ldots,M, \end{array}$
%
% ставится в соответствие априорная вероятность возникновения
%
% $\begin{array}{cc} p(w_i), & \sum_{i=1}^M p(w_i)=1. \end{array}$
%
% Вычисляется общее число отличающихся пикселей $n_s$.

ABC = prprob;                   % загрузка стандартных бинарных образов букв;
s = ABC(:, [19, 4]);            % эталонные описания букв "S" и "D"; plotchar(X(:,4)) - вывод буквы;
pw = [0.2, 0.8];                % априорные вероятности гипотез,
pw = pw ./ sum(pw);             % исключение некорректного задания априорных вероятностей;
ns = sum(s(:, 1) ~= s(:, 2));   % общее количество несовпадающих элементов.

%% 1.2. Задание параметров статистических испытаний
% Предполагается проведение испытаний для $N$ значений вероятностей искажения $pI:$
%
% $$ \begin{array}{lcrr} 
%     pI=(pI_1,\ldots,pI_j,\ldots,pI_N), &
%     pI_j=\varepsilon+\frac{j-1}{N}, &
%     j=1,\ldots,N, &
%     \varepsilon=2^{-52}.
% \end{array} $$

N = 20;                         % число анализируемых вероятностей искажения;
pI = eps : 1 / N : 1 - eps;     % вероятности искажения пикселей изображения 
pI_ = 1 - pI;                  	% и их инвертированные значения.

%%% 2. Реализация статистического моделирования
%% 2.1. Синтез решающего правила и расчет теоретических вероятностей ошибок
% Для каждого значения $pI_j$ вычисляются значения коэффициентов разделяющей функции
%
% $\begin{array}{lr} g1=(g1_1, \ldots, g1_N), & g2=(g2_1, \ldots, g2_N), \end{array}$
%
% а так же вероятности ошибок первого $\alpha_j$ и второго $\beta_j$ рода, 
% значения которых фиксируются $j$-том столбце матрицы ошибок $Pt:$
%
% $$ \begin{array}{lcr}
%     Pt=||pt_{ij}||, & pt_{ij}=\{
%     \begin{array}{lr}
%        \alpha_j, & i=1, \\ \beta_j, & i=2,
%     \end{array}
%     & j=1,\ldots,N.
% \end{array} $$
% 
% Для вычисления $\alpha_j$ и $\beta_j$ используется функция  
% <http://www.mathworks.com/help/stats/binocdf.html binocdf> и вектор $L0:$
%
% $$\begin{array}{lr}
%     L0=(L0_1,\ldots,L0_j,\ldots,L0_N), &
%     L0_j=\frac{l_0^{\prime}}{2\ln(1-pI_j)-2\ln pI_j}+\frac{n_s}{2}=\frac{1}{2}(\frac{l_0^{\prime}}{LI_j} + n_s),
% \end{array}$$
%
% $$\begin{array}{lcr}
%     l_0^{\prime}=\ln\frac{p(\omega_2)}{p(\omega_1)}, &
%     LI_j=\ln\frac{1-pI_j}{pI_j}, & 
%     j=1,\ldots,N.
% \end{array}$$

s1 = s(:, 1);       % наискажённое изображение 1го символа;
s2 = s(:, 2);       % наискажённое изображение 2го символа.


% Инвертированные изображения:
s1_ = 1 - s1;
s2_ = 1 - s2;
ks10 = s1&s2_;
ks01 = s1_&s2;

% Вычисление коэффициентов разделяющей функции:
g1 = log((s1 * pI_ + s1_ * pI) ./ (s2 * pI_ + s2_ * pI));
g2 = log((s1 * pI + s1_ * pI_) ./ (s2 * pI + s2_ * pI_));
% Определение порогов принятия решения:
l0_ = log(pw(2) / pw(1));           % l0';
LI = log(pI_) - log(pI);            % LI;
L0 = 0.5 * (l0_ ./ LI + ns);        % L0;
Pt = zeros(2, N);                   % инициализация матрицы вероятностей ошибок распознавания.
% Фиксация значений вероятности ошибок первого и второго рода для каждого значения pI:
Pt(1, :) = (pI < 0.5) .* binocdf(L0, ns, pI_) + (pI > 0.5) .* (1 - binocdf(L0, ns, pI_));
Pt(2, :) = (pI_ < 0.5) .* binocdf(L0, ns, pI) + (pI_ > 0.5) .* (1 - binocdf(L0, ns, pI));

%% 2.2. Тестирование алгоритма методом статистических испытаний
% Для каждого значения $pI_j$ осуществляется $K$ реализаций вычислительного эксперимента,
% в ходе которого происходит фиксация результатов распознавания искаженных
% (с вероятностью $pI_j$) образов букв $\begin{array}{rl} s^{(i)}, & i=1,\ldots,M, \end{array}$
% в матрице $Pe$
%
% $\begin{array}{lcr} Pe=||pe_{ij}||, & i=1,\ldots,M & j=1,\ldots,N. \end{array}$
%
% Распознавания образа, характеризуемого вектором $x^{(k)},$ осуществляется на основе ранее расчитанных
% коэффициентов резделяющей функции:
%
% $$g^{\prime\prime}(x^{(k)})=g1^T x^{(k)}+g2^T(1-x^{(k)})
% \begin{array}{c} > \\ < \end{array}l_0^{\prime}$$
% 
K = 2000;                   % количество реализаций эксперимента;
Pe = zeros(2, N);           % инициализация экспериментальной матрицы вероятностей ошибок.
for j = 1 : N                   % цикл по значениям вероятности искажения элементов изображений
    for kk = 1 : K                  % цикл по числу реализаций эксперимента
        for i = 1 : M                   % цикл по классам
            % Формирование наблюдаемого (распрзнаваемого) изображения:
            x = s(:, i);                    % эталонный образ изображения;
            r = rand(n, 1);                 % случайные числа (для сравнения с pI);
            x(r < pI(j)) = 1 - x(r < pI(j));% инверсия случайных пикселей наблюдаемого изображения.
            % Классификация:
            x_ = 1 - x;
            Lx01 = sum(x(ks01)); 
            Lx10 = sum(x(ks10));
            Px01 = sum(x_(ks01));
            Px10 = sum(x_(ks10));           
            g = LI(j) * Lx10 - LI(j) * Lx01 + LI(j) * Px01 - LI(j) * Px10 - l0_;
            %g = (Lx10 + Px01) * LI(j) - (ns - Lx10 - Px01) * LI(j) - l0_;

            ia = 1 .* (g > 0) + 2 .* (g <= 0);              % номер класса распознанного образа;
            Pe(i, j) = Pe(i, j) + (i ~= ia);                % фиксация результата распознавания.
        end;
    end;
    if j == fix(N / 3)
        IX = x;             % фиксация распрзнаваемого образа для демонстрации.
    end;
end;
Pe = Pe / K;

%%% 3. Визуализация результатов эксперимента
%% 3.1. Отображение графиков вероятностей ошибок
figure;
plot(pI, Pt(1, :), 'b', pI, Pt(2, :), 'g', pI, Pe(1, :), 'bp', pI, Pe(2, :), 'gp');
title('Теоретические и экспериментальные оценки вероятностей ошибок');
legend('\alpha (теор)', '\beta (теор)',...
        '\alpha (эксп)', '\beta (эксп)');
%% 3.2. Демонстрация одного из распознаваемых образов
IS = reshape(s2_, 5, 7)'; 
IX = reshape(1 - IX, 5, 7)'; 
figure();
imshow(IS);
title('Эталонный образ символа');
figure();
imshow(IX);
title('Наблюдаемый (распознаваемый) образ символа');
figure();
plotchar(s1);
figure();
plotchar(s2);